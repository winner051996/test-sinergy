// console.log('–ü—Ä–∏–≤–µ—Ç –º–∏—Ä!');
// console.log('–ü—Ä–∏–≤–µ—Ç' + '–º–∏—Ä!');
// let hello = '–ü—Ä–∏–≤–µ—Ç ';
// let world = '–º–∏—Ä!';
// let concat = hello + world;


// let teslaStockPrice = 758; 
// let newPrice = false;

// if ((teslaStockPrice === 756 + 2) && newPrice) { 
// 	console.log('–ê–∫—Ü–∏—é –ø–æ—Ä–∞ –ø—Ä–æ–¥–∞–≤–∞—Ç—å'); 
// } else if (!newPrice) { 
// 	console.log('–ü–æ–∫–∞ –¥–µ—Ä–∂–∏–º, –ø—É—Å—Ç—å –µ—â—ë –ø–æ–¥—Ä–∞—Å—Ç—ë—Ç'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–ö–∞–∫ –¥—ë—à–µ–≤–æ, –Ω–∞–¥–æ –µ—â—ë –¥–æ–∫—É–ø–∏—Ç—å'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–ù–µ–ø–ª–æ—Ö–æ, –ø–æ–¥–æ–∂–¥—É –µ—â–µ'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–õ–∞–¥–Ω–æ, –≤—Å–µ –µ—â–µ –∂–¥—É'); 
// } else { 
// 	console.log('–ë–µ—Ä—É –Ω–∞ –≤—Å–µ'); 
// } 



// if ((teslaStockPrice === 756 + 50) && !newPrice) { 
// 	console.log('–ê–∫—Ü–∏—é –ø–æ—Ä–∞ –ø—Ä–æ–¥–∞–≤–∞—Ç—å'); 
// } else if (newPrice) { 
// 	console.log('–ü–æ–∫–∞ –¥–µ—Ä–∂–∏–º, –ø—É—Å—Ç—å –µ—â—ë –ø–æ–¥—Ä–∞—Å—Ç—ë—Ç'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–ö–∞–∫ –¥—ë—à–µ–≤–æ, –Ω–∞–¥–æ –µ—â—ë –¥–æ–∫—É–ø–∏—Ç—å'); 
// } else if ((teslaStockPrice === 756 + 50) || !newPrice) { 
// 	console.log('–ù–µ–ø–ª–æ—Ö–æ, –ø–æ–¥–æ–∂–¥—É –µ—â–µ'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–õ–∞–¥–Ω–æ, –≤—Å–µ –µ—â–µ –∂–¥—É'); 
// } else { 
// 	console.log('–ë–µ—Ä—É –Ω–∞ –≤—Å–µ'); 
// } 

// let teslaStockPrice = 758; 
// let newPrice = false;


// if ((teslaStockPrice === 756 + 50) && newPrice) { 
// 	console.log('–ê–∫—Ü–∏—é –ø–æ—Ä–∞ –ø—Ä–æ–¥–∞–≤–∞—Ç—å'); 
// } else if (newPrice) { 
// 	console.log('–ü–æ–∫–∞ –¥–µ—Ä–∂–∏–º, –ø—É—Å—Ç—å –µ—â—ë –ø–æ–¥—Ä–∞—Å—Ç—ë—Ç'); 
// } else if ((teslaStockPrice * 2) < 500) { 
// 	console.log('–ö–∞–∫ –¥—ë—à–µ–≤–æ, –Ω–∞–¥–æ –µ—â—ë –¥–æ–∫—É–ø–∏—Ç—å'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–ù–µ–ø–ª–æ—Ö–æ, –ø–æ–¥–æ–∂–¥—É –µ—â–µ'); 
// } else if (teslaStockPrice < 500) { 
// 	console.log('–õ–∞–¥–Ω–æ, –≤—Å–µ –µ—â–µ –∂–¥—É'); 
// } else { 
// 	console.log('–ë–µ—Ä—É –Ω–∞ –≤—Å–µ'); 
// } 



// console.log(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, ${user[0]} ${user[1] } ${user[2] }! 
//     –ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞? –û—Ç–≤–µ—Ç: ${user[3]}`);
// console.log('–î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞:', user.length);

// let number = 20;
// while (number < 20) {
//     console.log('while', number);
//     number = number + 2;
// }

// do {
//     console.log('do while', number);
//     number = number + 2;
// } while (number < 20);

// let user = ['–ü—Ä–æ—Ö–æ—Ä–æ–≤', '–ê–Ω–¥—Ä–µ–π', 29, '–ú–æ—Å–∫–≤–∞', true, 
//     '–†–∞–º–µ–Ω—Å–∫–æ–µ', 10, '–ß–µ–ª—è–±–∏–Ω—Å–∫', false, '–ù–æ–≤–æ—Å–∏–±', 10];

// let i = 0;

// let type = 'number';

// while (user[i] !== undefined) {
//     if (typeof user[i] === type) {
//         console.log(user[i]);
//     }
//     i = i + 1;
// } 



// let myObject = { 
//     stringKey: '–∑–Ω–∞—á–µ–Ω–∏–µ', 
//     numberKey: 4, 
//     booleanKey: true,
//     function: function consoleKitten() {
//         console.log('kitten!'); 
//     }
//  }
 
//  let user = ['–ü—Ä–æ—Ö–æ—Ä–æ–≤', '–ê–Ω–¥—Ä–µ–π', 29, '–ú–æ—Å–∫–≤–∞', true];

//  let userObject = {
//     surname: '–ü—Ä–æ—Ö–æ—Ä–æ–≤',
//     name: '–ê–Ω–¥—Ä–µ–π',
//     age: 29,
//     city: '–ú–æ—Å–∫–≤–∞',
//     isMale: true
//  }

//  console.log(user[1]);
//  console.log(userObject.name);




//  function keepScore(ours, theirs, them) { 
//         if (ours > theirs) { 
//         console.log('–í—ã–∏–≥—Ä–∞–ª–∏! üòÉ –°—á—ë—Ç ' + ours + ':' + theirs); 
//         } else if (ours === theirs) { 
//             console.log('–ù–∏—á—å—è. üòê –°—á—ë—Ç ' + ours + ':' + theirs); 
//         } else { 
//             console.log('–ü—Ä–æ–¥—É–ª–∏... üò¢ –°—á—ë—Ç ' + ours + ':' + theirs); 
//         } 
//     } 

// keepScore(10, 8);
// keepScore(1);
// keepScore(5, 2, 4);
    


// let buttonLearn = document.querySelector('.buttons-info__btn');
// let modalWindow = document.querySelector('.modal-window');

// buttonLearn.addEventListener('click', function() {
//     modalWindow.classList.toggle('display-none')
// })


// const appleWatch = document.querySelector('.apple-watch');
// console.log(appleWatch);
// appleWatch.insertAdjacentHTML('beforebegin', '<div class="buttons-info"><button class="buttons-info__btn buttons-info__btn_solid">Learn more</button><button class="buttons-info__btn buttons-info__btn_trans">Buy</button></div>');

//TASK MANAGER
const list = document.querySelector('.todo-list');
const input = document.querySelector('.input-text');
const buttonAdd = document.querySelector('.button-add');
const buttonDelete = document.querySelector('.button-delete');

function addItem() {
    const listItem = document.createElement('li'); 
    listItem.textContent = input.value;
    listItem.className = 'li-item';
    if (input.value === '') {
        alert('–ü–æ–ª–µ –ø—É—Å—Ç–æ–µ')
    } else {
        list.append(listItem);
        input.value = ''
    }
}

function deleteItem() {
    const listContainer = list.querySelector('.li-item')
    const newItem = listContainer.closest('.li-item');
    newItem.remove();
}

buttonAdd.addEventListener('click', addItem);
buttonDelete.addEventListener('click', deleteItem);


// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—É–Ω–∫—Ç–∞ –≤–º–µ—Å—Ç–µ —Å –∫–Ω–æ–ø–∫–æ–π –∏ –¥–∞–ª—å–Ω–µ—à–π–µ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞, –æ–ø—è—Ç—å –∂–µ –≤–º–µ—Å—Ç–µ —Å –∫–Ω–æ–ø–∫–æ–π

const deleteNewButton = document.querySelector('.todo-item-button');
deleteNewButton.addEventListener('click', function() {
    const listNew = deleteNewButton.closest('.todo-item');
    listNew.remove();
})


// ----------------------- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ–≥–∞ template
// const userTemplate = document.querySelector('#user').content;
// const userOnline = document.querySelector('.user-online');

// const userElem = userTemplate.querySelector('.user').cloneNode(true);
// userElem.querySelector('.user__name').textContent = '–ù–æ–≤—ã–π –º–µ—Ç–æ–¥';

// userOnline.append(userElem);

// -------------------------------- –ü–µ—Ä–µ–¥–µ–ª—ã–≤–∞–µ–º task manager –ø–æ–¥ template

const managerTemplate = document.querySelector('#template-list').content;
const divContainer = document.querySelector('.task-manager');

const elementManager = managerTemplate.querySelector('.template-container').cloneNode(true);

const buttonAddTemplate = elementManager.querySelector('.template-button-add');
// const listItemTemplate = elementManager.querySelector('.template-li-item');
const inputTemplate = elementManager.querySelector('.template-input-text');

function addItemTemplate() {
    const listItemTemplate = elementManager.querySelector('.template-li-item');
    listItemTemplate.textContent = inputTemplate.value;
}


buttonAddTemplate.textContent = '–î–æ–±–∞–≤–∏—Ç—å';
buttonAddTemplate.addEventListener('click', addItemTemplate);


divContainer.append(elementManager);


// ---------------------------------- –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã forEach

// const array = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å'];
// for(let i = 0; i < array.length; i++) {
//     console.log('for', array[i]);
// }

// array.forEach((value, index) => {
//     console.log(value)
// });

// array.map((value, index) => {
//     console.log('map', value)
//     return value
// });


// ------------------ REST –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

function consoleDogs(firstDog, ...otherDogs) { 
	console.log(`–ü–µ—Ä–≤—ã–π: ${firstDog}`); 
    otherDogs.forEach((value) => console.log(value))
}

consoleDogs('–°–ø–∞–Ω–∏–µ–ª—å', '–û–≤—á–∞—Ä–∫–∞');


// ---------------------------------------------
const user = {
    name: '–î–º–∏—Ç—Ä–∏–π',
    age: 30,
    city: '–ú–æ—Å–∫–≤–∞'
}

// console.log(user.name, user.age, user.city);

Object.keys(user).forEach((value) => console.log(user[value]));

